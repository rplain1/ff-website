---
title: "Hot Boyz"
---

```{r}
#| echo: false
#| include: false
library(reactable)
library(reactablefmtr)

group_column <- function(class = NULL, ...) {
  colDef(cell = format_pct, maxWidth = 70, align = "center", class = paste("cell number", class), ...)
}

format_pct <- function(value) {
  if (value == 0) {
    "  \u2013 "
  } # en dash for 0%
  else if (value == 1) {
    "\u2713"
  } # checkmark for 100%
  else if (value < 0.01) {
    " <1%"
  } else if (value > 0.99) {
    ">99%"
  } else {
    formatC(paste0(round(value * 100), "%"), width = 4)
  }
}

make_color_pal <- function(colors, bias = 1) {
  get_color <- colorRamp(colors, bias = bias)
  function(x) rgb(get_color(x), maxColorValue = 255)
}

rating_color <- make_color_pal(c("lightpink", "#f8fcf8", "lightgreen"), bias = 1.3)
off_rating_color <- make_color_pal(c("white", "lightblue", "#35b0ff", "#35f0ff"), bias = 0.6)
def_rating_color <- make_color_pal(c("white", "pink", "orangered", "#ff1010"), bias = 0.6)
knockout_pct_color <- make_color_pal(c("#ffffff", "#f2fbd2", "#c9ecb4", "#93d3ab", "#35b0ab"), bias = 2)
playoff_pct_color <- make_color_pal(c("#ffffff", "#ABBDFF", "#DA84bb", "#9471a4"), bias = 2)
loser_pct_column <- make_color_pal(c("#ffffff", "lightpink", "#fFA6BE"), bias = 2)

knockout_column <- function(maxWidth = 70, class = NULL, ...) {
  colDef(
    cell = format_pct,
    maxWidth = maxWidth,
    class = paste("cell number", class),
    style = function(value) {
      # Lighter color for <1%
      if (value < 0.01) {
        list(color = "#aaa")
      } else {
        list(color = "#111", background = knockout_pct_color(value))
      }
    },
    ...
  )
}


playoff_column <- function(maxWidth = 70, class = NULL, borderLeft = NULL, ...) {
  colDef(
    cell = format_pct,
    maxWidth = maxWidth,
    class = paste("cell number", class),
    style = function(value) {
      # Lighter color for <1%
      if (value < 0.01) {
        list(color = "#aaa", borderLeft = borderLeft)
      } else {
        list(color = "#111", background = knockout_pct_color(value), borderLeft = borderLeft)
      }
    },
    ...
  )
}

loser_column <- function(maxWidth = 70, class = NULL, borderRight = NULL, ...) {
  colDef(
    cell = format_pct,
    maxWidth = maxWidth,
    class = paste("cell number", class),
    style = function(value) {
      # Lighter color for <1%
      if (value < 0.01) {
        list(color = "#aaa", borderRight = borderRight)
      } else {
        list(color = "#111", background = "white", borderRight = borderRight) # loser_pct_column(value))
      }
    },
    ...
  )
}


rating_column <- function(maxWidth = 55, ...) {
  colDef(
    maxWidth = maxWidth,
    align = "center",
    class = "cell number",
    format = colFormat(digits = 0),
    ...
  )
}
playoff_table <- readRDS('data/playoff_table.rds')
```

```{r}
#| echo: false
reactable(
  playoff_table,
  theme = reactablefmtr::fivethirtyeight(),
  highlight = TRUE,
  defaultPageSize = 12,
  # columnGroups = list(
  #   # colGroup(name = "Points", columns = c('pf', 'pa')),
  #   #colGroup(name = "Regular Season", columns = c('bye', 'last')),
  #   colGroup(name = "Postseason Projections", columns = c('last', 'bye', 'playoffs', 'semi_finals', 'finals', 'winner'))
  # ),
  columns = list(
    rank = colDef(
      width = 60,
      align = "center",
      name = "Rank",
      style = list(borderRight = "2px solid #777")
    ),
    franchise_name = colDef(
      # show = FALSE,
      name = "Team",
      maxWidth = 200
    ),
    power_rank = colDef(
      name = "Team Strength",
      maxWidth = 80,
      # cell = pill_buttons(
      #   df3,
      #   colors = c('lightpink', '#f8fcf8', 'lightgreen')
      # )
      cell = icon_assign(playoff_table, icon = "fire", fill_color = "orangered", empty_color = "lightgrey", buckets = 5)
    ),
    wins = colDef(
      # align = 'left',
      align = "center",
      name = "Record",
      maxWidth = 70,
      # maxWidth = 150,
      # cell = icon_assign(df3, icon = 'trophy', fill_color = 'goldenrod', empty_opacity = 0)
    ),
    pf = rating_column(
      name = "PF",
      style = function(value) {
        scaled <- (value - min(playoff_table$pf)) / (max(playoff_table$pf) - min(playoff_table$pf))
        color <- off_rating_color(scaled)
        value <- format(round(value))
        list(background = color)
      }
    ),
    pa = rating_column(
      name = "PA",
      style = function(value) {
        scaled <- (value - min(playoff_table$pa)) / (max(playoff_table$pa) - min(playoff_table$pa))
        color <- def_rating_color(scaled)
        value <- format(round(value))
        list(background = color)
      }
    ),
    bye = loser_column(
      show = FALSE,
      name = "1st Round Bye", class = "border-left", borderRight = "2px solid #000000"
    ),
    # loser_bracket = colDef(show = FALSE),
    # loser_bracket = loser_column(name = 'Losers Bracket', class = 'border-left'),
    # last_place = colDef(show = FALSE),
    # bye = loser_column(name = 'Last Place', class = 'border-left', borderRight = '2px solid #000000'),
    playoffs = playoff_column(name = "Playoff", class = "border-left", borderLeft = "2px solid #000000"),
    semi_finals = knockout_column(name = "Semi-Finals", class = "border-left"),
    finals = knockout_column(name = "Finals", class = "border-left"),
    winner = knockout_column(name = "Winner", class = "border-left")
  )
)

```

#### League History

<br>

```{r}
#| echo: false

df <- gsheet::gsheet2tbl('https://docs.google.com/spreadsheets/d/1yNmLo68xxzI4w-bfMASAgk7-TrxaTKHI3If2hL2JOPw/edit?usp=sharing')

df[df['Year'] < 2024, ] |> reactable::reactable()
```
